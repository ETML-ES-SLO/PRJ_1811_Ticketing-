<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>